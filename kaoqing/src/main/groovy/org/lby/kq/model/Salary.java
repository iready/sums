package org.lby.kq.model;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.lby.kq.model.base.BaseSalary;
import org.zyq.core.lang.Str;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Salary extends BaseSalary<Salary> {
    public static final Salary dao = new Salary();


    public boolean isCanDK(String email, Integer type) {
        Long c = Db.queryLong("select count(0) from " + TABLENAME + " where yx=? and type=? and date(now())=date(time_dj)", email, type);
        return c == 0;
    }

    /**
     * 查找当天的打卡记录
     *
     * @return
     */
    public List<Salary> find_email_now(String email) {
        return find("select * from " + TABLENAME + " where yx=? and date(time_dj)=date(now())", email);
    }

    public List<Salary> find_by_fy(String unit, Integer year, Integer month, String days) {
        String sql = "SELECT * FROM kq_salary   WHERE fy=? and year(time_dj)=? and month(time_dj)=? ";
        if (days != null && !days.trim().isEmpty()) {
            sql += "and day(time_dj) in(" + days + ")";
        }
        return find(sql, unit, year, month);
    }

    /*统计*/
    public List<Record> tj_cd_and_zt(Integer year, Integer month, String days, int unitType, String unit) {
        StringBuffer sb = new StringBuffer();
        List<Object> objects = new ArrayList<>();
        if (unitType == 0) {
            sb.append("SELECT  XM,ou.YOUXIANG," +
                    "  sum(if(ks.type = 0 AND judge_cd(ks.time_dj, kct.first, kct.hcSb) < 0, 1, 0))  cd1," +
                    "  sum(if(ks.type = 2 AND judge_cd(ks.time_dj, kct.third, kct.hcSb) < 0, 1, 0))  cd3," +
                    "  sum(if(ks.type = 1 AND judge_zt(ks.time_dj, kct.second, kct.hcXb) > 0, 1, 0)) zt2," +
                    "  sum(if(ks.type = 3 AND judge_zt(ks.time_dj, kct.fourth, kct.hcXb) > 0, 1, 0)) zt4" +
                    "FROM kq_salary ks LEFT JOIN kq_config_time kct ON ks.confid = kct.id" +
                    "  LEFT JOIN org_user ou ON ks.yx = ou.YOUXIANG" +
                    "WHERE 1 = 1 AND year(time_dj) = 2016 AND month(time_dj) = 7 AND day(time_dj) IN (12)" +
                    "GROUP BY ks.yx");
        }
        return Db.find(sb.toString(), objects.toArray());
    }

    public String days() {
        String s = Db.queryStr("select group_concat(DISTINCT year(time_dj))  from kq_salary");
        if (s == null || s.isEmpty()) {
            s = "2016";
        }
        return s;
    }

    public List<Record> find_1(String userName, Object start, Object end) {
        if (Str.isBlank((String) end)) {
//            date(time_dj) = ?
            return Db.find("SELECT ou.XM, sal.time_dj, sal.type,sel_time(kct.first,kct.second,kct.third,kct.fourth,kct.hcSb,kct.hcXb,sal.type,sal.time_dj) rr\n" +
                    "FROM kq_salary sal LEFT JOIN org_user ou ON sal.yx = ou.YOUXIANG LEFT JOIN kq_config_time kct  on kct.id=sal.confid\n" +
                    "WHERE sal.yx = ? AND date(sal.time_dj) = ?  ORDER BY date(sal.time_dj), sal.type", userName, start);
        }
        return Db.find("SELECT ou.XM, sal.time_dj, sal.type,sel_time(kct.first,kct.second,kct.third,kct.fourth,kct.hcSb,kct.hcXb,sal.type,sal.time_dj) rr\n" +
                "FROM kq_salary sal LEFT JOIN org_user ou ON sal.yx = ou.YOUXIANG LEFT JOIN kq_config_time kct  on kct.id=sal.confid\n" +
                "WHERE sal.yx = ? AND sal.time_dj BETWEEN ? AND ? ORDER BY date(sal.time_dj), sal.type", userName, start, end);
    }

}